---
# defaults file for ansible-role-custom-jenkins

# Pipeline flow mode (Dev by default). -> Custom-pipe
build_ceph: false     # Deploy ceph
dev_mode: true        # False means prod.

#------------------------------------------- SEED VARS -----------------------------------------#
seed_work_dir: '/opt/tikal'
seed_deploy_dir: '{{ seed_work_dir }}/deploy'
seed_sanjer: '' # SET SANJER IP

seed_job_list:
  - seed
  - pipe


# Listen port
cj_http_port: 8080

cj_repo_base_url: 'https://pkg.jenkins.io/'

# Juseppe config
cj_juseppe: false

# Nexus config
cj_install_online_mode: true
cj_nexus: false
cj_nexus_ip: '' # Place nexus ip
cj_nexus_port: '8081'
cj_nexus_url: 'http://{{ cj_nexus_ip }}:{{ cj_nexus_port }}'
cj_nexus_mirror: 'repository/jenkins-mirror'
cj_nexus_updates: 'repository/jenkins-updates'

cj_channel: latest-LTS # could be latest || latest-LTS
cj_version: '2.32'

# some like to see /jenkins as a suffix I don't ... ;)
cj_application_context: ''

# Directories used by Jenkins [ Apt || Rpm ]
cj_download_dir: /tmp
cj_home: /var/lib/jenkins
cj_log_dir: /var/log/jenkins
cj_cache_dir: /var/cache/jenkins
cj_init_dir: "{{ cj_home }}/init.groovy.d"
cj_update_dir: "{{ cj_home }}/updates"
cj_webroot: /var/cache/jenkins/war
cj_plugins_tmp_folder: /tmp/plugins
cj_usercont_dir: "{{ cj_home }}/userContent"
cj_uc_json: "/tmp/default.json"

# use jenkins behind proxy
# TODO: find a way to configure via groovy without authentication ... { already have template with auth }
cj_set_proxy: false
cj_proxy_host: "{{ proxy_server }}"
cj_proxy_port: "{{ proxy_port |d('3148') }}"
#cj_no_proxy_hosts: will be set in tasks
cj_proxy_conf_file: "{{ cj_home }}/proxy.xml"
# in case we want to test jenkins without a proxy when cj_set_proxy is set to true
cj_remove_proxy: false

# jenkins 2 requires skip wizrd param
# chenge this to true if you really want it ;)
cj_run_startup_wizard: "false" # String becuase the jvm arg becomes False ...

cj_jvm_args: "-Djava.awt.headless=true -Djenkins.install.runSetupWizard={{ cj_run_startup_wizard }}"
cj_cmd_args: "--webroot={{ cj_webroot }} --httpPort={{ cj_http_port }}"

# The system level user Jenkins should runas
#TODO we should revmove this all together ...
cj_runas: false
#cj_custom_user: user
#cj_custom_group: user
cj_runas_user: "{{ cj_custom_user | d('jenkins') }}"
cj_runas_group: "{{ cj_custom_group | d('jenkins') }}"
cj_runas_sudoer: true

# Authorization strategy basic
cj_allow_anon_read: true
cj_basic_auth: true
cj_local_admin_users:
  - { username: admin, password: admin }
  - { username: jjb, password: jjb }

cj_local_regular_users:
  - { username: user1, password: user1 }
  - { username: user2, password: user2 }

#jenkins-cli
cj_cli_jar_location: "{{ cj_cache_dir }}/war/WEB-INF/jenkins-cli.jar"
cj_cli_hostname: 'localhost'


# jenkins material theme
# could be: red, pink, purple, deep-purple see full list @ -> http://afonsof.com/jenkins-material-theme/
cj_theme_color: amber
cj_theme_conf_file: org.codefirst.SimpleThemeDecorator.xml
cj_theme_css_url: https://jenkins-contrib-themes.github.io/jenkins-material-theme/dist/material-{{ cj_theme_color }}.css
cj_theme_js_url: https://cdn.rawgit.com/djonsson/jenkins-atlassian-theme/gh-pages/theme.js

# Get list + versions from existing Jenkins as a base configuration ...
#
#java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8080 list-plugins \
#| awk '{print $1, $NF;}' \
#| awk -F " " ' {print " - { name: \""$1 "\","" version: \""  $2 "\", enabled: \"true\" }"} '

# choose plugin sets to use
cj_wizard: true
cj_theme: true
cj_setup_matrix_auth_strategy: true
cj_setup_dsl_plugins: true
cj_goodies: true

# Categories:
cj_base: false

cj_github: false
cj_blueocean: false
cj_pipeline: false
cj_workflow: false

cj_seed_demo: false

cj_wizard_plugins:
  - { name: "jenkins-multijob-plugin", version: "1.23", enabled: "true", extention: "hpi" }
  - { name: "bouncycastle-api", version: "2.16.0", enabled: "true", extention: "hpi" }
  - { name: "cloudbees-folder", version: "5.15", enabled: "true", extention: "hpi" }
  - { name: "structs", version: "1.5", enabled: "true", extention: "hpi" }
  - { name: "junit", version: "1.19", enabled: "true", extention: "hpi" }
  - { name: "antisamy-markup-formatter", version: "1.5", enabled: "true", extention: "hpi" }
  - { name: "pam-auth", version: "1.3", enabled: "true", extention: "hpi" }
  - { name: "windows-slaves", version: "1.2", enabled: "true", extention: "hpi" }
  - { name: "display-url-api", version: "0.5", enabled: "true", extention: "hpi" }
  - { name: "mailer", version: "1.18", enabled: "true", extention: "hpi" }
  - { name: "ldap", version: "1.13", enabled: "true", extention: "hpi" }
  - { name: "token-macro", version: "2.0", enabled: "true", extention: "hpi" }
  - { name: "external-monitor-job", version: "1.6", enabled: "true", extention: "hpi" }
  - { name: "icon-shim", version: "2.0.3", enabled: "true", extention: "hpi" }
  - { name: "matrix-auth", version: "1.4", enabled: "true", extention: "hpi" }
  - { name: "script-security", version: "1.24", enabled: "true", extention: "hpi" }
  - { name: "matrix-project", version: "1.7.1", enabled: "true", extention: "hpi" }
  - { name: "build-timeout", version: "1.18", enabled: "true", extention: "hpi" }
  - { name: "credentials", version: "2.1.10", enabled: "true", extention: "hpi" }
  - { name: "workflow-step-api", version: "2.6", enabled: "true", extention: "hpi" }
  - { name: "plain-credentials", version: "1.3", enabled: "true", extention: "hpi" }
  - { name: "credentials-binding", version: "1.10", enabled: "true", extention: "hpi" }
  - { name: "timestamper", version: "1.8.7", enabled: "true", extention: "hpi" }
  - { name: "workflow-api", version: "2.8", enabled: "true", extention: "hpi" }
  - { name: "workflow-basic-steps", version: "2.3", enabled: "true", extention: "hpi" }
  - { name: "resource-disposer", version: "0.3", enabled: "true", extention: "hpi" }
  - { name: "ws-cleanup", version: "0.32", enabled: "true", extention: "hpi" }
  - { name: "ant", version: "1.4", enabled: "true", extention: "hpi" }
  - { name: "gradle", version: "1.25", enabled: "true", extention: "hpi" }
  - { name: "pipeline-milestone-step", version: "1.2", enabled: "true", extention: "hpi" }
  - { name: "workflow-support", version: "2.11", enabled: "true", extention: "hpi" }
  - { name: "pipeline-build-step", version: "2.4", enabled: "true", extention: "hpi" }
  - { name: "jquery-detached", version: "1.2.1", enabled: "true", extention: "hpi" }
  - { name: "pipeline-input-step", version: "2.5", enabled: "true", extention: "hpi" }
  - { name: "ace-editor", version: "1.1", enabled: "true", extention: "hpi" }
  - { name: "workflow-scm-step", version: "2.3", enabled: "true", extention: "hpi" }
  - { name: "scm-api", version: "1.3", enabled: "true", extention: "hpi" }
  - { name: "workflow-cps", version: "2.23", enabled: "true", extention: "hpi" }
  - { name: "pipeline-stage-step", version: "2.2", enabled: "true", extention: "hpi" }
  - { name: "workflow-job", version: "2.9", enabled: "true", extention: "hpi" }
  - { name: "pipeline-graph-analysis", version: "1.3", enabled: "true", extention: "hpi" }
  - { name: "pipeline-rest-api", version: "2.4", enabled: "true", extention: "hpi" }
  - { name: "handlebars", version: "1.1.1", enabled: "true", extention: "hpi" }
  - { name: "momentjs", version: "1.1.1", enabled: "true", extention: "hpi" }
  - { name: "pipeline-stage-view", version: "2.4", enabled: "true", extention: "hpi" }
  - { name: "ssh-credentials", version: "1.12", enabled: "true", extention: "hpi" }
  - { name: "git-client", version: "2.1.0", enabled: "true", extention: "hpi" }
  - { name: "git-server", version: "1.7", enabled: "true", extention: "hpi" }
  - { name: "workflow-cps-global-lib", version: "2.5", enabled: "true", extention: "hpi" }
  - { name: "branch-api", version: "1.11.1", enabled: "true", extention: "hpi" }
  - { name: "workflow-multibranch", version: "2.9.2", enabled: "true", extention: "hpi" }
  - { name: "durable-task", version: "1.12", enabled: "true", extention: "hpi" }
  - { name: "workflow-durable-task-step", version: "2.5", enabled: "true", extention: "hpi" }
  - { name: "workflow-aggregator", version: "2.4", enabled: "true", extention: "hpi" }
  - { name: "github-api", version: "1.82", enabled: "true", extention: "hpi" }
  - { name: "git", version: "3.0.1", enabled: "true", extention: "hpi" }
  - { name: "github", version: "1.25.0", enabled: "true", extention: "hpi" }
  - { name: "github-branch-source", version: "1.10.1", enabled: "true", extention: "hpi" }
  - { name: "github-organization-folder", version: "1.5", enabled: "true", extention: "hpi" }
  - { name: "mapdb-api", version: "1.0.9.0", enabled: "true", extention: "hpi" }
  - { name: "subversion", version: "2.7.1", enabled: "true", extention: "hpi" }
  - { name: "ssh-slaves", version: "1.12", enabled: "true", extention: "hpi" }
  - { name: "email-ext", version: "2.53", enabled: "true", extention: "hpi"}

cj_dsl_plugins:
  - { name: "job-dsl", version: "1.54", enabled: "true", extention: "hpi"}
  - { name: "job-node-stalker", version: "1.0.5", enabled: "true", extention: "hpi" }
  - { name: "jquery", version: "1.11.2-0", enabled: "true", extention: "hpi" }
  - { name: "workflow-cps-global-lib", version: "2.5", enabled: "true", extention: "hpi" }
  - { name: "build-pipeline-plugin", version: "1.5.6", enabled: "true", extention: "hpi" }

cj_setup_matrix_auth_strategy_plugins:
  - { name: "icon-shim", version: "2.0.3", enabled: "true", extention: "hpi" }
  - { name: "matrix-auth", version: "1.4", enabled: "true", extention: "hpi" }

cj_theme_plugins:
  - { name: "simple-theme-plugin", version: "0.3", enabled: "true", extention: "hpi" }

cj_goodie_plugins:
  - { name: "greenballs" }

cj_nodes_sshkey_credentials:
  - {name: "Jenkins", id: "1ba43f0b-5cef-46b7-8d64-d1bd0a77e11a1", username: "root", password: "qwe123", description: "Root SSH key credentials", private_key: "{{ cj_home }}/.ssh/id_rsa"}

cj_nodes_credentials:
  - { name: "master-root", id: "6b2a3485-bf8b-429d-8b21-c19d6b60f196", username: "root", password: "qwe123", description: "use this for local root cred" }

cj_nodes_create: true
cj_nodes:
  - { name: "sanjer", host: "{{ seed_sanjer }}", launcher_type: "ssh", ssh_port: "22", credential_id: "1ba43f0b-5cef-46b7-8d64-d1bd0a77e11a1", home: "/home/jenkins", labels: "sanjer", executors: "5", description: "sanjer slave" }
  - { name: "localroot", host: "localhost", launcher_type: "ssh", ssh_port: "22", credential_id: "6b2a3485-bf8b-429d-8b21-c19d6b60f196", home: "/home/jenkins", labels: "localroot", executors: "3", description: "localroot" }

cj_oracle_account_username: "ivan.prokhorov@gmail.com"
cj_oracle_account_password: "Abrasha200"

cj_tools_jdks:
  - { name: "jdk-8u112", version: "jdk-8u112"}
  - { name: "jdk-8u92", version: "jdk-8u92"}
  - { name: "jdk-8u77", version: "jdk-8u77"}